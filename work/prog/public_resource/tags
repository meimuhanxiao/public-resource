!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AFLAGS	Makefile	/^AFLAGS=-Wall -c -g$/;"	m
CC	Makefile	/^CC=gcc$/;"	m
DEVSTATUS_	data_global.h	42;"	d
DEV_	data_global.h	43;"	d
DEV_INFO_DIR	data_global.h	44;"	d
LDFLAGS	Makefile	/^LDFLAGS= -lpthread  -lsqlite3$/;"	m
LENGTH	data_global.h	38;"	d
NOSENDTO_SERVER_EVENT	data_global.h	41;"	d
OBJS	Makefile	/^OBJS=main.o can_rcv_pthread.o datato_server.o pthread_ping_server.o func_crc.o\\$/;"	m
PATH_NAME	can_rcv_pthread.c	2;"	d	file:
PRO_ID	can_rcv_pthread.c	3;"	d	file:
ReleaseResource	main.c	/^void ReleaseResource (int signo)$/;"	f
SERVER_IP	data_global.h	39;"	d
SERVER_PORT	data_global.h	40;"	d
SQLITE3_TEXT	sqlite3.h	3410;"	d
SQLITE_ABORT	sqlite3.h	386;"	d
SQLITE_ACCESS_EXISTS	sqlite3.h	1022;"	d
SQLITE_ACCESS_READ	sqlite3.h	1024;"	d
SQLITE_ACCESS_READWRITE	sqlite3.h	1023;"	d
SQLITE_ALTER_TABLE	sqlite3.h	2315;"	d
SQLITE_ANALYZE	sqlite3.h	2317;"	d
SQLITE_ANY	sqlite3.h	3768;"	d
SQLITE_API	sqlite3.h	53;"	d
SQLITE_ATTACH	sqlite3.h	2313;"	d
SQLITE_AUTH	sqlite3.h	405;"	d
SQLITE_BLOB	sqlite3.h	3403;"	d
SQLITE_BUSY	sqlite3.h	387;"	d
SQLITE_BUSY_RECOVERY	sqlite3.h	459;"	d
SQLITE_CANTOPEN	sqlite3.h	396;"	d
SQLITE_CANTOPEN_NOTEMPDIR	sqlite3.h	460;"	d
SQLITE_CHECKPOINT_FULL	sqlite3.h	6635;"	d
SQLITE_CHECKPOINT_PASSIVE	sqlite3.h	6634;"	d
SQLITE_CHECKPOINT_RESTART	sqlite3.h	6636;"	d
SQLITE_CONFIG_GETMALLOC	sqlite3.h	1492;"	d
SQLITE_CONFIG_GETMUTEX	sqlite3.h	1498;"	d
SQLITE_CONFIG_GETPCACHE	sqlite3.h	1502;"	d
SQLITE_CONFIG_HEAP	sqlite3.h	1495;"	d
SQLITE_CONFIG_LOG	sqlite3.h	1503;"	d
SQLITE_CONFIG_LOOKASIDE	sqlite3.h	1500;"	d
SQLITE_CONFIG_MALLOC	sqlite3.h	1491;"	d
SQLITE_CONFIG_MEMSTATUS	sqlite3.h	1496;"	d
SQLITE_CONFIG_MULTITHREAD	sqlite3.h	1489;"	d
SQLITE_CONFIG_MUTEX	sqlite3.h	1497;"	d
SQLITE_CONFIG_PAGECACHE	sqlite3.h	1494;"	d
SQLITE_CONFIG_PCACHE	sqlite3.h	1501;"	d
SQLITE_CONFIG_SCRATCH	sqlite3.h	1493;"	d
SQLITE_CONFIG_SERIALIZED	sqlite3.h	1490;"	d
SQLITE_CONFIG_SINGLETHREAD	sqlite3.h	1488;"	d
SQLITE_CONFIG_URI	sqlite3.h	1504;"	d
SQLITE_CONSTRAINT	sqlite3.h	401;"	d
SQLITE_COPY	sqlite3.h	2322;"	d
SQLITE_CORRUPT	sqlite3.h	393;"	d
SQLITE_CORRUPT_VTAB	sqlite3.h	461;"	d
SQLITE_CREATE_INDEX	sqlite3.h	2290;"	d
SQLITE_CREATE_TABLE	sqlite3.h	2291;"	d
SQLITE_CREATE_TEMP_INDEX	sqlite3.h	2292;"	d
SQLITE_CREATE_TEMP_TABLE	sqlite3.h	2293;"	d
SQLITE_CREATE_TEMP_TRIGGER	sqlite3.h	2294;"	d
SQLITE_CREATE_TEMP_VIEW	sqlite3.h	2295;"	d
SQLITE_CREATE_TRIGGER	sqlite3.h	2296;"	d
SQLITE_CREATE_VIEW	sqlite3.h	2297;"	d
SQLITE_CREATE_VTABLE	sqlite3.h	2318;"	d
SQLITE_DBCONFIG_ENABLE_FKEY	sqlite3.h	1565;"	d
SQLITE_DBCONFIG_ENABLE_TRIGGER	sqlite3.h	1566;"	d
SQLITE_DBCONFIG_LOOKASIDE	sqlite3.h	1564;"	d
SQLITE_DBSTATUS_CACHE_HIT	sqlite3.h	5863;"	d
SQLITE_DBSTATUS_CACHE_MISS	sqlite3.h	5864;"	d
SQLITE_DBSTATUS_CACHE_USED	sqlite3.h	5857;"	d
SQLITE_DBSTATUS_LOOKASIDE_HIT	sqlite3.h	5860;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	sqlite3.h	5862;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	sqlite3.h	5861;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	sqlite3.h	5856;"	d
SQLITE_DBSTATUS_MAX	sqlite3.h	5865;"	d
SQLITE_DBSTATUS_SCHEMA_USED	sqlite3.h	5858;"	d
SQLITE_DBSTATUS_STMT_USED	sqlite3.h	5859;"	d
SQLITE_DELETE	sqlite3.h	2298;"	d
SQLITE_DENY	sqlite3.h	2267;"	d
SQLITE_DEPRECATED	sqlite3.h	70;"	d
SQLITE_DETACH	sqlite3.h	2314;"	d
SQLITE_DONE	sqlite3.h	410;"	d
SQLITE_DROP_INDEX	sqlite3.h	2299;"	d
SQLITE_DROP_TABLE	sqlite3.h	2300;"	d
SQLITE_DROP_TEMP_INDEX	sqlite3.h	2301;"	d
SQLITE_DROP_TEMP_TABLE	sqlite3.h	2302;"	d
SQLITE_DROP_TEMP_TRIGGER	sqlite3.h	2303;"	d
SQLITE_DROP_TEMP_VIEW	sqlite3.h	2304;"	d
SQLITE_DROP_TRIGGER	sqlite3.h	2305;"	d
SQLITE_DROP_VIEW	sqlite3.h	2306;"	d
SQLITE_DROP_VTABLE	sqlite3.h	2319;"	d
SQLITE_EMPTY	sqlite3.h	398;"	d
SQLITE_ERROR	sqlite3.h	383;"	d
SQLITE_EXPERIMENTAL	sqlite3.h	71;"	d
SQLITE_EXTERN	sqlite3.h	49;"	d
SQLITE_FAIL	sqlite3.h	6720;"	d
SQLITE_FCNTL_CHUNK_SIZE	sqlite3.h	785;"	d
SQLITE_FCNTL_FILE_POINTER	sqlite3.h	786;"	d
SQLITE_FCNTL_LOCKSTATE	sqlite3.h	780;"	d
SQLITE_FCNTL_OVERWRITE	sqlite3.h	790;"	d
SQLITE_FCNTL_PERSIST_WAL	sqlite3.h	789;"	d
SQLITE_FCNTL_SIZE_HINT	sqlite3.h	784;"	d
SQLITE_FCNTL_SYNC_OMITTED	sqlite3.h	787;"	d
SQLITE_FCNTL_WIN32_AV_RETRY	sqlite3.h	788;"	d
SQLITE_FLOAT	sqlite3.h	3402;"	d
SQLITE_FORMAT	sqlite3.h	406;"	d
SQLITE_FULL	sqlite3.h	395;"	d
SQLITE_FUNCTION	sqlite3.h	2320;"	d
SQLITE_GET_LOCKPROXYFILE	sqlite3.h	781;"	d
SQLITE_IGNORE	sqlite3.h	2268;"	d
SQLITE_INDEX_CONSTRAINT_EQ	sqlite3.h	4915;"	d
SQLITE_INDEX_CONSTRAINT_GE	sqlite3.h	4919;"	d
SQLITE_INDEX_CONSTRAINT_GT	sqlite3.h	4916;"	d
SQLITE_INDEX_CONSTRAINT_LE	sqlite3.h	4917;"	d
SQLITE_INDEX_CONSTRAINT_LT	sqlite3.h	4918;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	sqlite3.h	4920;"	d
SQLITE_INSERT	sqlite3.h	2307;"	d
SQLITE_INTEGER	sqlite3.h	3401;"	d
SQLITE_INTERNAL	sqlite3.h	384;"	d
SQLITE_INTERRUPT	sqlite3.h	391;"	d
SQLITE_IOCAP_ATOMIC	sqlite3.h	514;"	d
SQLITE_IOCAP_ATOMIC16K	sqlite3.h	520;"	d
SQLITE_IOCAP_ATOMIC1K	sqlite3.h	516;"	d
SQLITE_IOCAP_ATOMIC2K	sqlite3.h	517;"	d
SQLITE_IOCAP_ATOMIC32K	sqlite3.h	521;"	d
SQLITE_IOCAP_ATOMIC4K	sqlite3.h	518;"	d
SQLITE_IOCAP_ATOMIC512	sqlite3.h	515;"	d
SQLITE_IOCAP_ATOMIC64K	sqlite3.h	522;"	d
SQLITE_IOCAP_ATOMIC8K	sqlite3.h	519;"	d
SQLITE_IOCAP_SAFE_APPEND	sqlite3.h	523;"	d
SQLITE_IOCAP_SEQUENTIAL	sqlite3.h	524;"	d
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	sqlite3.h	525;"	d
SQLITE_IOERR	sqlite3.h	392;"	d
SQLITE_IOERR_ACCESS	sqlite3.h	448;"	d
SQLITE_IOERR_BLOCKED	sqlite3.h	446;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	sqlite3.h	449;"	d
SQLITE_IOERR_CLOSE	sqlite3.h	451;"	d
SQLITE_IOERR_DELETE	sqlite3.h	445;"	d
SQLITE_IOERR_DIR_CLOSE	sqlite3.h	452;"	d
SQLITE_IOERR_DIR_FSYNC	sqlite3.h	440;"	d
SQLITE_IOERR_FSTAT	sqlite3.h	442;"	d
SQLITE_IOERR_FSYNC	sqlite3.h	439;"	d
SQLITE_IOERR_LOCK	sqlite3.h	450;"	d
SQLITE_IOERR_NOMEM	sqlite3.h	447;"	d
SQLITE_IOERR_RDLOCK	sqlite3.h	444;"	d
SQLITE_IOERR_READ	sqlite3.h	436;"	d
SQLITE_IOERR_SEEK	sqlite3.h	457;"	d
SQLITE_IOERR_SHMLOCK	sqlite3.h	455;"	d
SQLITE_IOERR_SHMMAP	sqlite3.h	456;"	d
SQLITE_IOERR_SHMOPEN	sqlite3.h	453;"	d
SQLITE_IOERR_SHMSIZE	sqlite3.h	454;"	d
SQLITE_IOERR_SHORT_READ	sqlite3.h	437;"	d
SQLITE_IOERR_TRUNCATE	sqlite3.h	441;"	d
SQLITE_IOERR_UNLOCK	sqlite3.h	443;"	d
SQLITE_IOERR_WRITE	sqlite3.h	438;"	d
SQLITE_LAST_ERRNO	sqlite3.h	783;"	d
SQLITE_LIMIT_ATTACHED	sqlite3.h	2778;"	d
SQLITE_LIMIT_COLUMN	sqlite3.h	2773;"	d
SQLITE_LIMIT_COMPOUND_SELECT	sqlite3.h	2775;"	d
SQLITE_LIMIT_EXPR_DEPTH	sqlite3.h	2774;"	d
SQLITE_LIMIT_FUNCTION_ARG	sqlite3.h	2777;"	d
SQLITE_LIMIT_LENGTH	sqlite3.h	2771;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	sqlite3.h	2779;"	d
SQLITE_LIMIT_SQL_LENGTH	sqlite3.h	2772;"	d
SQLITE_LIMIT_TRIGGER_DEPTH	sqlite3.h	2781;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	sqlite3.h	2780;"	d
SQLITE_LIMIT_VDBE_OP	sqlite3.h	2776;"	d
SQLITE_LOCKED	sqlite3.h	388;"	d
SQLITE_LOCKED_SHAREDCACHE	sqlite3.h	458;"	d
SQLITE_LOCK_EXCLUSIVE	sqlite3.h	538;"	d
SQLITE_LOCK_NONE	sqlite3.h	534;"	d
SQLITE_LOCK_PENDING	sqlite3.h	537;"	d
SQLITE_LOCK_RESERVED	sqlite3.h	536;"	d
SQLITE_LOCK_SHARED	sqlite3.h	535;"	d
SQLITE_MISMATCH	sqlite3.h	402;"	d
SQLITE_MISUSE	sqlite3.h	403;"	d
SQLITE_MUTEX_FAST	sqlite3.h	5530;"	d
SQLITE_MUTEX_RECURSIVE	sqlite3.h	5531;"	d
SQLITE_MUTEX_STATIC_LRU	sqlite3.h	5537;"	d
SQLITE_MUTEX_STATIC_LRU2	sqlite3.h	5538;"	d
SQLITE_MUTEX_STATIC_MASTER	sqlite3.h	5532;"	d
SQLITE_MUTEX_STATIC_MEM	sqlite3.h	5533;"	d
SQLITE_MUTEX_STATIC_MEM2	sqlite3.h	5534;"	d
SQLITE_MUTEX_STATIC_OPEN	sqlite3.h	5535;"	d
SQLITE_MUTEX_STATIC_PMEM	sqlite3.h	5539;"	d
SQLITE_MUTEX_STATIC_PRNG	sqlite3.h	5536;"	d
SQLITE_NOLFS	sqlite3.h	404;"	d
SQLITE_NOMEM	sqlite3.h	389;"	d
SQLITE_NOTADB	sqlite3.h	408;"	d
SQLITE_NOTFOUND	sqlite3.h	394;"	d
SQLITE_NULL	sqlite3.h	3404;"	d
SQLITE_OK	sqlite3.h	381;"	d
SQLITE_OPEN_AUTOPROXY	sqlite3.h	477;"	d
SQLITE_OPEN_CREATE	sqlite3.h	474;"	d
SQLITE_OPEN_DELETEONCLOSE	sqlite3.h	475;"	d
SQLITE_OPEN_EXCLUSIVE	sqlite3.h	476;"	d
SQLITE_OPEN_FULLMUTEX	sqlite3.h	487;"	d
SQLITE_OPEN_MAIN_DB	sqlite3.h	479;"	d
SQLITE_OPEN_MAIN_JOURNAL	sqlite3.h	482;"	d
SQLITE_OPEN_MASTER_JOURNAL	sqlite3.h	485;"	d
SQLITE_OPEN_NOMUTEX	sqlite3.h	486;"	d
SQLITE_OPEN_PRIVATECACHE	sqlite3.h	489;"	d
SQLITE_OPEN_READONLY	sqlite3.h	472;"	d
SQLITE_OPEN_READWRITE	sqlite3.h	473;"	d
SQLITE_OPEN_SHAREDCACHE	sqlite3.h	488;"	d
SQLITE_OPEN_SUBJOURNAL	sqlite3.h	484;"	d
SQLITE_OPEN_TEMP_DB	sqlite3.h	480;"	d
SQLITE_OPEN_TEMP_JOURNAL	sqlite3.h	483;"	d
SQLITE_OPEN_TRANSIENT_DB	sqlite3.h	481;"	d
SQLITE_OPEN_URI	sqlite3.h	478;"	d
SQLITE_OPEN_WAL	sqlite3.h	490;"	d
SQLITE_PERM	sqlite3.h	385;"	d
SQLITE_PRAGMA	sqlite3.h	2308;"	d
SQLITE_PROTOCOL	sqlite3.h	397;"	d
SQLITE_RANGE	sqlite3.h	407;"	d
SQLITE_READ	sqlite3.h	2309;"	d
SQLITE_READONLY	sqlite3.h	390;"	d
SQLITE_READONLY_CANTLOCK	sqlite3.h	463;"	d
SQLITE_READONLY_RECOVERY	sqlite3.h	462;"	d
SQLITE_REINDEX	sqlite3.h	2316;"	d
SQLITE_REPLACE	sqlite3.h	6722;"	d
SQLITE_ROLLBACK	sqlite3.h	6718;"	d
SQLITE_ROW	sqlite3.h	409;"	d
SQLITE_SAVEPOINT	sqlite3.h	2321;"	d
SQLITE_SCHEMA	sqlite3.h	399;"	d
SQLITE_SELECT	sqlite3.h	2310;"	d
SQLITE_SET_LOCKPROXYFILE	sqlite3.h	782;"	d
SQLITE_SHM_EXCLUSIVE	sqlite3.h	1051;"	d
SQLITE_SHM_LOCK	sqlite3.h	1049;"	d
SQLITE_SHM_NLOCK	sqlite3.h	1061;"	d
SQLITE_SHM_SHARED	sqlite3.h	1050;"	d
SQLITE_SHM_UNLOCK	sqlite3.h	1048;"	d
SQLITE_SOURCE_ID	sqlite3.h	112;"	d
SQLITE_STATIC	sqlite3.h	3975;"	d
SQLITE_STATUS_MALLOC_COUNT	sqlite3.h	5757;"	d
SQLITE_STATUS_MALLOC_SIZE	sqlite3.h	5753;"	d
SQLITE_STATUS_MEMORY_USED	sqlite3.h	5748;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	sqlite3.h	5750;"	d
SQLITE_STATUS_PAGECACHE_SIZE	sqlite3.h	5755;"	d
SQLITE_STATUS_PAGECACHE_USED	sqlite3.h	5749;"	d
SQLITE_STATUS_PARSER_STACK	sqlite3.h	5754;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	sqlite3.h	5752;"	d
SQLITE_STATUS_SCRATCH_SIZE	sqlite3.h	5756;"	d
SQLITE_STATUS_SCRATCH_USED	sqlite3.h	5751;"	d
SQLITE_STMTSTATUS_AUTOINDEX	sqlite3.h	5923;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	sqlite3.h	5921;"	d
SQLITE_STMTSTATUS_SORT	sqlite3.h	5922;"	d
SQLITE_SYNC_DATAONLY	sqlite3.h	568;"	d
SQLITE_SYNC_FULL	sqlite3.h	567;"	d
SQLITE_SYNC_NORMAL	sqlite3.h	566;"	d
SQLITE_TESTCTRL_ALWAYS	sqlite3.h	5625;"	d
SQLITE_TESTCTRL_ASSERT	sqlite3.h	5624;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	sqlite3.h	5622;"	d
SQLITE_TESTCTRL_BITVEC_TEST	sqlite3.h	5620;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	sqlite3.h	5621;"	d
SQLITE_TESTCTRL_FIRST	sqlite3.h	5616;"	d
SQLITE_TESTCTRL_ISKEYWORD	sqlite3.h	5628;"	d
SQLITE_TESTCTRL_LAST	sqlite3.h	5632;"	d
SQLITE_TESTCTRL_LOCALTIME_FAULT	sqlite3.h	5631;"	d
SQLITE_TESTCTRL_OPTIMIZATIONS	sqlite3.h	5627;"	d
SQLITE_TESTCTRL_PENDING_BYTE	sqlite3.h	5623;"	d
SQLITE_TESTCTRL_PGHDRSZ	sqlite3.h	5629;"	d
SQLITE_TESTCTRL_PRNG_RESET	sqlite3.h	5619;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	sqlite3.h	5618;"	d
SQLITE_TESTCTRL_PRNG_SAVE	sqlite3.h	5617;"	d
SQLITE_TESTCTRL_RESERVE	sqlite3.h	5626;"	d
SQLITE_TESTCTRL_SCRATCHMALLOC	sqlite3.h	5630;"	d
SQLITE_TEXT	sqlite3.h	3406;"	d
SQLITE_TEXT	sqlite3.h	3408;"	d
SQLITE_TOOBIG	sqlite3.h	400;"	d
SQLITE_TRANSACTION	sqlite3.h	2311;"	d
SQLITE_TRANSIENT	sqlite3.h	3976;"	d
SQLITE_UPDATE	sqlite3.h	2312;"	d
SQLITE_UTF16	sqlite3.h	3767;"	d
SQLITE_UTF16BE	sqlite3.h	3766;"	d
SQLITE_UTF16LE	sqlite3.h	3765;"	d
SQLITE_UTF16_ALIGNED	sqlite3.h	3769;"	d
SQLITE_UTF8	sqlite3.h	3764;"	d
SQLITE_VERSION	sqlite3.h	110;"	d
SQLITE_VERSION	sqlite3.h	77;"	d
SQLITE_VERSION_NUMBER	sqlite3.h	111;"	d
SQLITE_VERSION_NUMBER	sqlite3.h	80;"	d
SQLITE_VTAB_CONSTRAINT_SUPPORT	sqlite3.h	6693;"	d
_SQLITE3RTREE_H_	sqlite3.h	6753;"	d
_SQLITE3_H_	sqlite3.h	34;"	d
__DATA_GLOBAL__H__	data_global.h	2;"	d
aConstraint	sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint
aConstraintUsage	sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage
aOrderBy	sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby
aParam	sqlite3.h	/^  double *aParam;                 \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
add_mem_show_device	pthread_query_showdata.c	/^void add_mem_show_device()$/;"	f
argvIndex	sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
cam_num	pthread_ping_device.c	/^int cam_num = 0;\/\/相机数量$/;"	v
can_fd	can_rcv_pthread.c	/^int can_fd; $/;"	v
can_init	can_rcv_pthread.c	/^int can_init()$/;"	f
can_rcv_buf	can_rcv_pthread.c	/^uint8_t can_rcv_buf[LENGTH];$/;"	v
can_rcv_flag	can_rcv_pthread.c	/^bool can_rcv_flag = false;$/;"	v
can_rcv_id	main.c	/^pthread_t  can_rcv_id, datato_server_id,ping_server_id,ping_device_id,\\$/;"	v
can_rcv_timeout	can_rcv_pthread.c	/^void can_rcv_timeout(int sig)$/;"	f
cond_datato_server	can_rcv_pthread.c	/^pthread_cond_t cond_datato_server;$/;"	v
cond_datato_server	datato_server.c	/^pthread_cond_t   cond_datato_server;$/;"	v
connect_server	pthread_ping_server.c	/^int connect_server()$/;"	f
count	can_rcv_pthread.c	/^int count = 0; \/\/每次从can得到几个字节数据$/;"	v
crc_high	can_rcv_pthread.c	/^uint8_t crc_low,crc_high;$/;"	v
crc_low	can_rcv_pthread.c	/^uint8_t crc_low,crc_high;$/;"	v
crch	func_crc.c	/^const uint8_t  crch[256]= $/;"	v
crcl	func_crc.c	/^const uint8_t  crcl[256]= $/;"	v
create_db	main.c	/^void create_db()$/;"	f
datalen	can_rcv_pthread.c	/^uint16_t datalen = 0;\/\/发过来数据的长度不包括2字节crc$/;"	v
datato_server_id	main.c	/^pthread_t  can_rcv_id, datato_server_id,ping_server_id,ping_device_id,\\$/;"	v
db	main.c	/^sqlite3 *db;$/;"	v
desc	sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
dev_num	pthread_ping_device.c	/^int dev_num = 0;\/\/设备数量$/;"	v
double	sqlite3.h	263;"	d
double	sqlite3.h	6731;"	d
estimatedCost	sqlite3.h	/^  double estimatedCost;      \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info
fill_can_rcv_buf	can_rcv_pthread.c	/^void fill_can_rcv_buf(int eventno,int i)$/;"	f
func_crc	func_crc.c	/^void func_crc( const uint8_t *buf,  uint32_t  len ,  uint8_t *out_low,  uint8_t *out_high )$/;"	f
have_event_noto_server	datato_server.c	/^bool have_event_noto_server = false;$/;"	v
iColumn	sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
iColumn	sqlite3.h	/^     int iColumn;              \/* Column on left-hand side of constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iTermOffset	sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iVersion	sqlite3.h	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs
iVersion	sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods
iVersion	sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module
idxNum	sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info
idxStr	sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info
main	main.c	/^int main(int argc, const char *argv[])$/;"	f
main	moni/client.c	/^int main(int argc, const char *argv[])$/;"	f
main	moni/server.c	/^int main(int argc, char **argv)$/;"	f
main	test1/test.c	/^int main(int argc, const char *argv[])$/;"	f
map_p	can_rcv_pthread.c	/^uint8_t *map_p; \/\/共享内存地址 $/;"	v
mem_map	can_rcv_pthread.c	/^uint8_t *mem_map()$/;"	f
mutex_datato_server	datato_server.c	/^pthread_mutex_t  mutex_datato_server,mutex_socket;$/;"	v
mutex_eventno	can_rcv_pthread.c	/^pthread_mutex_t mutex_eventno;\/\/事件序号锁$/;"	v
mutex_socket	datato_server.c	/^pthread_mutex_t  mutex_datato_server,mutex_socket;$/;"	v
mxPathname	sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs
nConstraint	sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info
nOrderBy	sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info
nParam	sqlite3.h	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nRef	sqlite3.h	/^  int nRef;                       \/* NO LONGER USED *\/$/;"	m	struct:sqlite3_vtab
needToFreeIdxStr	sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info
omit	sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
op	sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
orderByConsumed	sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info
pAppData	sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods
pAppData	sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs
pArg	sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods
pContext	sqlite3.h	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pMethods	sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods
pModule	sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab
pNext	sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs
pUser	sqlite3.h	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pVtab	sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor
ping_data_sem	pthread_ping_device.c	/^sem_t ping_data_sem;$/;"	v
ping_device_id	main.c	/^pthread_t  can_rcv_id, datato_server_id,ping_server_id,ping_device_id,\\$/;"	v
ping_server	pthread_ping_server.c	/^void ping_server()$/;"	f
ping_server_id	main.c	/^pthread_t  can_rcv_id, datato_server_id,ping_server_id,ping_device_id,\\$/;"	v
pthread_can_rcv	can_rcv_pthread.c	/^void *pthread_can_rcv(void *arg)$/;"	f
pthread_datato_server	datato_server.c	/^void *pthread_datato_server(void *arg)$/;"	f
pthread_ping_device	pthread_ping_device.c	/^void *pthread_ping_device(void *arg)$/;"	f
pthread_ping_server	pthread_ping_server.c	/^void *pthread_ping_server(void *arg)$/;"	f
pthread_query_showdata	pthread_query_showdata.c	/^void *pthread_query_showdata(void *arg)$/;"	f
pthread_rcv_data	moni/client.c	/^void *pthread_rcv_data(void *arg)$/;"	f
pthread_socket_read	pthread_socket_read.c	/^void *pthread_socket_read(void *arg)$/;"	f
query_showdata	pthread_query_showdata.c	/^uint8_t query_showdata[64] = {$/;"	v
query_showdata_id	main.c	/^			   query_showdata_id,read_socket_id;$/;"	v
raddr	pthread_ping_server.c	/^struct sockaddr_in raddr;$/;"	v	typeref:struct:sockaddr_in
read_eventno	can_rcv_pthread.c	/^int read_eventno()$/;"	f
read_socket_id	main.c	/^			   query_showdata_id,read_socket_id;$/;"	v
reconnect_server	pthread_ping_server.c	/^bool reconnect_server = true;$/;"	v
right_response_event	can_rcv_pthread.c	/^void right_response_event()$/;"	f
sd	datato_server.c	/^int sd;$/;"	v
sem	can_rcv_pthread.c	/^sem_t sem;$/;"	v
sem_ser_res	datato_server.c	/^sem_t sem_ser_res;\/\/阻塞等待服务器响应 由read_socket 线程解除阻塞$/;"	v
sem_socket_ok	pthread_ping_server.c	/^sem_t sem_socket_ok;$/;"	v
send_query_showdata	pthread_query_showdata.c	/^void send_query_showdata()$/;"	f
send_remain_eventto_server	pthread_ping_server.c	/^void send_remain_eventto_server()$/;"	f
server_response	datato_server.c	/^bool server_response;\/\/由read_socket 线程通过接收的服务器数据来判断服务器接收数据是否正确$/;"	v
server_status_ok	pthread_ping_server.c	/^bool server_status_ok = false;$/;"	v
shmid	can_rcv_pthread.c	/^int shmid;$/;"	v
socket_init	pthread_ping_server.c	/^int socket_init()$/;"	f
socket_rcv_data	pthread_socket_read.c	/^uint8_t socket_rcv_data[100] = {0};$/;"	v
socket_send_data	pthread_socket_read.c	/^uint8_t socket_send_data[1024] = {0};\/\/服务器询问展示数据，把展示数据发给服务器$/;"	v
sockfd	moni/client.c	/^int sockfd;$/;"	v
sqlite3	sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3_backup	sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_blob	sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_callback	sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_context	sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_destructor_type	sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_file	sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_index_constraint	sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint_usage	sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info
sqlite3_index_info	sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_orderby	sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info
sqlite3_int64	sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_io_methods	sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_mem_methods	sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_module	sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_mutex	sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex_methods	sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_pcache	sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache_methods	sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_rtree_geometry	sqlite3.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	sqlite3.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_stmt	sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_syscall_ptr	sqlite3.h	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t
sqlite3_temp_directory	sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_uint64	sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_value	sqlite3.h	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem
sqlite3_version	sqlite3.h	/^SQLITE_API SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_vfs	sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vtab	sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab_cursor	sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite_int64	sqlite3.h	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	sqlite3.h	/^  typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	sqlite3.h	/^  typedef long long int sqlite_int64;$/;"	t
sqlite_uint64	sqlite3.h	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	sqlite3.h	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	sqlite3.h	/^  typedef unsigned long long int sqlite_uint64;$/;"	t
store_event_intodatabase	can_rcv_pthread.c	/^void store_event_intodatabase()\/\/存入事件到数据库并且根据事件改写设备状态$/;"	f
szOsFile	sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs
usable	sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
write_eventno	can_rcv_pthread.c	/^void write_eventno(int eventno)$/;"	f
wrong_response	can_rcv_pthread.c	/^void wrong_response()$/;"	f
xAccess	sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs
xBegin	sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xBestIndex	sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module
xCachesize	sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods
xCheckReservedLock	sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods
xClose	sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xClose	sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xColumn	sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module
xCommit	sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xConnect	sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods
xCurrentTime	sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs
xCurrentTimeInt64	sqlite3.h	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs
xDelUser	sqlite3.h	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelete	sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs
xDestroy	sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDestroy	sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xDeviceCharacteristics	sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xDisconnect	sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDlClose	sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs
xDlError	sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs
xDlOpen	sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs
xEof	sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xFetch	sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods
xFileControl	sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods
xFileSize	sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods
xFilter	sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module
xFindFunction	sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module
xFree	sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods
xFullPathname	sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs
xGetLastError	sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs
xGetSystemCall	sqlite3.h	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xInit	sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xInit	sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods
xLock	sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xMalloc	sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods
xMutexAlloc	sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnd	sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnter	sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexFree	sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexHeld	sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexInit	sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexLeave	sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexNotheld	sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexTry	sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xNext	sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xNextSystemCall	sqlite3.h	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xOpen	sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs
xOpen	sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module
xPagecount	sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xRandomness	sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs
xRead	sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xRealloc	sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xRekey	sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods
xRelease	sqlite3.h	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRename	sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module
xRollback	sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xRollbackTo	sqlite3.h	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRoundup	sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods
xRowid	sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module
xSavepoint	sqlite3.h	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xSectorSize	sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xSetSystemCall	sqlite3.h	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs
xShmBarrier	sqlite3.h	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xShmLock	sqlite3.h	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods
xShmMap	sqlite3.h	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods
xShmUnmap	sqlite3.h	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods
xShutdown	sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xShutdown	sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods
xSize	sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xSleep	sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs
xSync	sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods
xSync	sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xTruncate	sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods
xTruncate	sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods
xUnlock	sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xUnpin	sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods
xUpdate	sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module
xWrite	sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
zErrMsg	sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab
zName	sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs
